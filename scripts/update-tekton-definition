#!/bin/bash

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
ROOTDIR=$(realpath $SCRIPTDIR/..)

source $ROOTDIR/properties

REPO="${1:-$PIPELINE__REPO__URL}"
BRANCH="${2:-$PIPELINE__REPO__BRANCH}"

# If the repo is still in a github.com repo, then use the raw format which works in Github, Gitlab pipelines
# For non github.com URLs, like the pipelines forked to GHE, use the blob format
if [[ $REPO == https://github.com* ]] ; then 
RAW_BASE=$(echo $REPO/$BRANCH | sed "s/github.com/raw.githubusercontent.com/")  
else
RAW_BASE="$REPO/blob/$(echo $BRANCH | sed "s|/|%2F|g")"
fi
REPONAME="$(basename $REPO)"

TEMPDIR=$ROOTDIR/temp
rm -rf $TEMPDIR # clean up
mkdir -p $TEMPDIR
cd $TEMPDIR
git clone $REPO 2>&1 > /dev/null
(cd $REPONAME; git checkout $BRANCH; git pull)

function add-backstage-labels () { 
        FILE_NAME=$1 
        # replace {{values.rawUrl}} to the current commit's URL
        sed -i "s!{{values.rawUrl}}!$RAW_BASE!g" $FILE_NAME
        sed -i "s!{{ values!\${{ values!g" $FILE_NAME
        # add labels for RHDH
        yq -i '(. | .metadata.labels += { "argocd/app-name": "${{ values.name }}",
                "janus-idp.io/tekton": "${{ values.name }}", 
                "backstage.io/kubernetes-id": "${{ values.name }}",
                "backstage.io/kubernetes-namespace": "${{ values.namespace }}",
                "app.kubernetes.io/part-of": "${{ values.name }}"
                } )' $FILE_NAME     
}

#source and gitops tekton copied, note new names 
SRC_TEKTON=$ROOTDIR/skeleton/ci/source-repo/tekton/.tekton 
GITOPS_TEKTON=$ROOTDIR/skeleton/ci/gitops-template/tekton/.tekton 



rm -rf $SRC_TEKTON
mkdir -p $SRC_TEKTON   
cp -r $TEMPDIR/$REPONAME/pac/source-repo/. $SRC_TEKTON
mkdir -p $SRC_TEKTON/../docs
cp -r $SRC_TEKTON/README.md  $SRC_TEKTON/../docs/pipelines.md

rm -rf $GITOPS_TEKTON
mkdir -p $GITOPS_TEKTON   
cp -r $TEMPDIR/$REPONAME/pac/gitops-repo/. $GITOPS_TEKTON
mkdir -p $GITOPS_TEKTON/../docs
cp -r $GITOPS_TEKTON/README.md  $GITOPS_TEKTON/../docs/pipelines.md

rm -rf $TEMPDIR

for prun in $SRC_TEKTON/*.yaml $GITOPS_TEKTON/*.yaml; do 
        echo "Labels for $prun" 
        add-backstage-labels $prun
done 
